#include<bits/stdc++.h>
using namespace std;
using pii = pair<int,int>;
int n;
vector<pii> time_;
vector<int> order;

bool test(int mid){
    int ed;
    for(int i=0;i<n;i++){
        int idx = order[i];
        if(i==0) ed = time_[idx].first;
        else{
            if((ed + mid)>time_[idx].second) return 0;
            ed = max(ed+mid,time_[idx].first);
        }
    }
    return 1;
}
int main(){
    int kase=0;
    while (cin >> n){
        if(n==0) break;
        int l = 0;
        int n1,n2;
        int r = 1440*600;
        time_.clear();
        order.clear();
        order.resize(n,0);
        for(int i=0;i<n;i++){
            cin >> n1 >> n2;
            time_.emplace_back(make_pair(n1*600,n2*600));
            order[i] = i;
        }
        int mid;
        bool ok;
        while(l < r){
            mid = (l+r)/2;
            ok = false;
            do{
                if(test(mid)){
                    ok = true;
                    break;
                }
            }while(next_permutation(order.begin(),order.begin()+n));
            if(!ok) r = mid;
            else l = mid+1;
        }
    	l--;//by l==r==mid,mid+1->-1
		if(l%10>=5) l+=10;//prepcision
		l/=10;

        kase++;
        cout << "Case " << kase<<": "<<l/60<<":"<< setfill('0') << setw(2)<< l%60 << endl;

    }
}
